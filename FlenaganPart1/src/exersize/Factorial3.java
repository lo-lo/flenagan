package exersize;

/**
 * Этот класс вычисляет факториалы и кэширует результаты в таблице для дальнейшего употребления.
 * 20! - самый большой факториал, который мы можем вычислить с применением типа данных long,
 * поэтому проверим аргумент и выдадим исключение, если аргумент окажется слишком большим или
 * слишком маленьким
 **/

public class Factorial3 {
    //Создадим массив для хранения факториалов от 0! до 20!
    static long[] table = new long[21];

    //инициализируем первый элемент массива
    static {table[0]=1;} //факториал 0 равен 1

    //Запоминаем номер последнего вычисленного факториала
    static int last = 0;

    public static long factorial(int x) throws IllegalAccessException {
        //Проверяем не слишком ли мал или велик х. Выдаем исключение,
        //если это так
        if (x >= table.length)
            throw new IllegalArgumentException("Переполнение: х слишком велик. ");
        if (x < 0) throw new IllegalArgumentException("х должен быть неотрицательным. ");

        //Вычисляем и кэшируем все пока еще несохраненные значения
        while (last < x){
            table[last + 1] = table[last]*(last + 1);
            last++;
        }
        //Возвращаем кэшированный факториал х
        return table[x];

    }

}
